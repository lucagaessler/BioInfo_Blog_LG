---
title: "Applied Bioinformatics Day 4"
author: "Luca Gaessler"
date: "2025-10-09"
image: "nf-core-rnaseq_metro_map_grey.png"
categories: [course, medbioinfo, nf-core]
description: "Hosted by Sweden's School for Medical Bioinformatics"
---

## Key Concepts I Learned Today

- **Running a Nextflow script**
- **Running an nf-core pipeline**

### Running a Nextflow script
Today was all about hands-on experience in Nextflow. In this context, we ran an RNA-sequencing pipeline on real-world data. This pipeline works by quantifying the raw reads files via Salmon, followed by a quality control session using FastQC, whose reports are then summarized via the MultiQC tool. Here, the power of Nextflow comes into play. All of these functionalities - be it quantification, quality control and so on - could be replaced or complemented by any other tool of our choice in a modular fashion. These Nextflow process modules can even be written in a completely different programming language!

Importantly, each process module has the following structure:

```Groovy
process INDEX {
    input: [input]

    optional container

    output: [output]

    script:
    """
    [bash code, can refer to a script in another language]
    """
}
```

These processes are then dynamically connected in a so-called workflow scope. Here is a simplified example from our analysis above (each process in capital letters):

```Groovy
workflow {

    index_ch = INDEX(params.transcriptome_file)
    quant_ch = QUANTIFICATION(index_ch, read_pairs_ch)
    fastqc_ch = FASTQC(read_pairs_ch)
    MULTIQC(quant_ch.mix(fastqc_ch).collect())

}
```

Once everything is in place, the Nextflow command is straight-forward. If you work on a cluster, do not forget your .config file!

```Groovy
nextflow run script.nf
```

### Running an nf-core pipeline
Of course, not every Nextflow pipeline has to be written from scratch. A lot of the readers will be pleased to hear that the nf-core platform provides off-the-shelf pipelines for all sorts of bioinformatic processes. One of their most popular pipelines is the one for analysing RNAseq data:

![**nf-core RNAseq Pipeline.** Schematic representation of the RNAseq pipeline from nf-core. Different stages and possible quantification methods are highlighted. Adapted from https://nf-co.re/rnaseq/3.14.0/ (last visit: 10/10/2025)](nf-core-rnaseq_metro_map_grey.png){#fig-id width=100% height=100% fig-align="center"}

We set up the pipeline via the instructions on the nf-core website - using the offline mode - and ran it on the high-performance cluster HPC2N. I can only recommend this approach, especially when dealing with large sample numbers: it is straight-forward, robust, and highly reproducible. In summary, if an nf-core pipeline exists for your purposes, do not hesitate to try it out!

## Reflections
For my thoughts on Nextflow and nf-core, please have a look at my previous post.

## Next Steps
Tomorrow will be the last course day with a ggplot2 session as well as the opportunity to provide feedback to the organizers.

**Thanks for reading!**